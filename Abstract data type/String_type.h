#pragma once

#include "EX_Standard.h"
/*------------------------------------------------------------------------------------------------*/
//串的定长顺序存储表示
/*------------------------------------------------------------------------------------------------*/
#define MAXSTRLEN 255
typedef unsigned char SString[MAXSTRLEN + 1];	//0单元存放串的长度

/*------------------------------------------------------------------------------------------------*/
//堆分配存储表示
/*------------------------------------------------------------------------------------------------*/
typedef struct {
	char *ch;
	int length;
}HString;

/*------------------------------------------------------------------------------------------------*/
//串的块链存储表示
/*------------------------------------------------------------------------------------------------*/
#define CHUNKSIZE 80
typedef struct Chunk {
	char ch[CHUNKSIZE];
	struct Chunk *next;
}Chunk;

typedef struct {
	Chunk *head, *tail;	//头尾指针（尾指针：为了便于进行联结操作）
	int curlen;			//串的当前长度
};

/*------------------------------------------------------------------------------------------------*/
//串的模式匹配算法
/*------------------------------------------------------------------------------------------------*/
int Index(SString S, SString T, int pos);		//算法4.5：模式匹配算法
int Index_KMP(SString S, SString T, int pos);	//算法4.6：KMP算法
void get_next(SString T, int next[]);			//算法4.7：求next函数值的算法
void get_nextval(SString T, int nextval[]);		//算法4.8：计算next函数修正值的算法